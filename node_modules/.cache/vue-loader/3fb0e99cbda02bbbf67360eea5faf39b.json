{"remainingRequest":"/Users/sameer/Desktop/personal-projects/vue-quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sameer/Desktop/personal-projects/vue-quiz/src/components/QuestionBox.vue?vue&type=style&index=0&id=62ab2b85&scoped=true&lang=css&","dependencies":[{"path":"/Users/sameer/Desktop/personal-projects/vue-quiz/src/components/QuestionBox.vue","mtime":1606461252370},{"path":"/Users/sameer/Desktop/personal-projects/vue-quiz/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sameer/Desktop/personal-projects/vue-quiz/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/sameer/Desktop/personal-projects/vue-quiz/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/sameer/Desktop/personal-projects/vue-quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sameer/Desktop/personal-projects/vue-quiz/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubGlzdC1ncm91cCB7CiAgbWFyZ2luLWJvdHRvbTogMTVweDsKfQoubGlzdC1ncm91cC1pdGVtOmhvdmVyewogIGJhY2tncm91bmQ6ICNFRUU7CiAgY3Vyc29yOnBvaW50ZXI7Cn0KLmJ0biB7CiAgbWFyZ2luOiAwIDVweDsKfQouc2VsZWN0ZWR7CiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlOwp9Ci5jb3JyZWN0ewogIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JlZW47Cn0KLmluY29ycmVjdHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7Cn0K"},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <b-jumbotron>\n\n      <template #lead>\n        {{ currQ.question }}\n      </template>\n\n      <hr class=\"my-4\">\n\n      <b-list-group>\n        <b-list-group-item\n            v-for=\"(answer,index) in answers\"\n            :key=\"index\"\n            @click.prevent = \"selectAnswer(index)\"\n            :class=\"answerClass(index)\"\n        >\n          {{answer}}\n        </b-list-group-item>\n      </b-list-group>\n\n      <b-button\n          variant=\"primary\"\n          href=\"#\"\n          @click=\"submitAnswer\"\n          :disabled=\"selectedIndex == null || answered\"\n      >\n        Submit\n      </b-button>\n      <b-button @click = \"next\" variant=\"success\" href=\"#\">Next\n      </b-button>\n    </b-jumbotron>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\nexport default {\n  props :{\n    currQ: Object,\n    next: Function,\n    increment: Function\n  },\n  data(){\n    return {\n      selectedIndex: null,\n      correctIndex: null,\n      shuffledAnswers: [],\n      answered: false\n    }\n  },\n  computed:{\n    answers(){\n      let answers = [...this.currQ.incorrect_answers, this.currQ.correct_answer]\n      return answers\n    }\n  },\n  watch : {\n    currQ: {\n      immediate: true,\n      handler() {\n        this.selectedIndex = null\n        this.answered= false\n        this.shuffleAnswers()\n      }\n    }\n  },\n  methods: {\n    selectAnswer(index){\n      this.selectedIndex = index\n    },\n    shuffleAnswers(){\n      let answers = [...this.currQ.incorrect_answers, this.currQ.correct_answer]\n      this.shuffledAnswers = _.shuffle(answers)\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currQ.correct_answer)\n    },\n    submitAnswer(){\n      let isCorrect = false\n      if (this.selectedIndex === this.correctIndex) {\n        isCorrect = true\n      }\n      this.answered = true\n      this.increment(isCorrect)\n    },\n    answerClass(index){\n      let answerClass = ''\n      if (!this.answered && this.selectedIndex === index){\n        answerClass = 'selected'\n      } else if (this.answered && this.correctIndex === index){\n        answerClass = 'correct'\n      } else if (this.answered && this.selectedIndex === index && this.correctIndex !== index){\n        answerClass = \"incorrect\"\n      }\n      return answerClass\n    }\n\n  }\n}\n</script>\n\n<style scoped>\n  .list-group {\n    margin-bottom: 15px;\n  }\n  .list-group-item:hover{\n    background: #EEE;\n    cursor:pointer;\n  }\n  .btn {\n    margin: 0 5px;\n  }\n  .selected{\n    background-color: lightblue;\n  }\n  .correct{\n    background-color: lightgreen;\n  }\n  .incorrect{\n    background-color: red;\n  }\n</style>"]}]}